{"version":3,"sources":["actionTypes.js","firebase.js","actions/notesAction.js","Components/noteCard.js","actions/userAction.js","Components/App.js","serviceWorker.js","reducers/index.js","reducers/noteReducer.js","reducers/userReducer.js","reducers/loadingReducer.js","Components/login.js","routes/Header.js","Components/Loading.js","Components/LoadingComponent.js","Components/AuthenticationComponent.js","Components/SubmitComment.js","Components/Comment.js","Components/noteDetail.js","Components/NoteEdit.js","index.js"],"names":["GET_NOTES","GET_USER","USER_STATUS","NOTES_STATUS","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","auth","googleProvider","GoogleAuthProvider","getNotes","dispatch","type","payload","on","snapshot","val","NoteCard","props","react_default","a","createElement","className","children","getUser","onAuthStateChanged","user","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","body","notes","handleChange","bind","assertThisInitialized","handleSubmit","renderNotes","e","setState","defineProperty","target","name","value","preventDefault","note","uid","saveNotes","_this2","_","map","key","noteCard","react_router_dom","to","concat","onClick","deleteNote","src","photoURL","alt","height","style","padding","displayName","onSubmit","onChange","placeholder","required","Component","connect","ownProps","push","id","child","remove","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","length","undefined","action","loading","objectSpread","Login","history","nextProps","marginTop","Date","getFullYear","googleLogin","signInWithPopup","Header","data-toggle","data-target","logout","signOut","Loading","LoadingComponent","_this$props","userLoading","notesLoading","_this$props2","Components_Loading","withRouter","AuthenticationComponent","SubmitComment","commentBody","comment","saveComment","noteId","Comment","_ref","NoteDetail","comments","Components_Comment","Components_SubmitComment","params","renderComments","NoteEdit","editNote","update","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","Components_LoadingComponent","react_router","path","component","exact","from","Components_AuthenticationComponent","routes_Header","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad849b07.chunk.js","sourcesContent":["export const GET_NOTES = 'GET_NOTES'\r\nexport const GET_USER = 'GET_USER'\r\n\r\nexport const USER_STATUS = 'USER_STATUS'\r\nexport const NOTES_STATUS = 'NOTES_STATUS'","import * as firebase from 'firebase'\r\n// import firestore from 'firebase/firestore'\r\n\r\n// const settings = {timestampsInSnapshots: true};\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAY-piEoQbpCD-0FKg6sGTtn3HwjziBmcg\",\r\n    authDomain: \"crud-23bfd.firebaseapp.com\",\r\n    databaseURL: \"https://crud-23bfd.firebaseio.com\",\r\n    projectId: \"crud-23bfd\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"208745345398\",\r\n    appId: \"1:208745345398:web:dfe089844a6228d2\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  // firebase.firestore().settings(settings);\r\n\r\n   export const database = firebase.database().ref('/notes');\r\n  // export default firebase;\r\n  export const auth = firebase.auth();\r\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();","import {GET_NOTES, NOTES_STATUS} from '../actionTypes'\r\nimport { database }  from '../firebase'\r\n\r\nexport function getNotes(){\r\n    return dispatch => {\r\n        dispatch({\r\n            type: NOTES_STATUS,\r\n            payload: true\r\n        })\r\n        database.on('value', snapshot => {\r\n            dispatch({\r\n                type: GET_NOTES,\r\n                payload: snapshot.val()\r\n            })\r\n            dispatch({\r\n                type: NOTES_STATUS,\r\n                payload: false\r\n            })\r\n        }, ()=> {\r\n            dispatch({\r\n                type: NOTES_STATUS,\r\n                payload: -1\r\n            })\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport function saveNotes(note){\r\n    return dispatch => database.push(note)\r\n}\r\n\r\nexport function editNote(id, note){\r\n    return dispatch => database.child(id).update(note);\r\n}\r\n\r\nexport function deleteNote(id){\r\n    return dispatch => database.child(id).remove();\r\n}\r\n\r\nexport function saveComment(noteId, comment){\r\n    return dispatch =>{\r\n        database.child(noteId).child('comments').push(comment);\r\n    }\r\n}","import React from 'react'\r\n\r\nconst NoteCard = props => {\r\n return (\r\n    <div className=\"jumbotron\">\r\n        <div>{props.children}</div>\r\n    </div>\r\n)}\r\n\r\nexport default  NoteCard;","import {auth,googleProvider} from '../firebase'\r\nimport {GET_USER, USER_STATUS} from '../actionTypes'\r\n\r\n\r\nexport function getUser(){\r\n    return dispatch => {\r\n        dispatch({\r\n            type: USER_STATUS,\r\n            payload: true\r\n        })\r\n        auth.onAuthStateChanged(user => {\r\n            dispatch({\r\n                type: GET_USER,\r\n                payload: user\r\n            })\r\n            dispatch({\r\n                type: USER_STATUS,\r\n                payload: false\r\n            })\r\n        })\r\n    }\r\n}\r\nexport function googleLogin(){\r\n    return dispatch => auth.signInWithPopup(googleProvider);\r\n}\r\n\r\nexport function logout(){\r\n    return dispatch => auth.signOut();\r\n}","import React, {Component} from 'react';\n//import firebase from '../firebase' \n//import { database } from '../firebase'\nimport _ from 'lodash'\nimport {connect} from 'react-redux'\nimport {getNotes, saveNotes, deleteNote} from '../actions/notesAction'\nimport NoteCard from '../Components/noteCard'\nimport {getUser} from '../actions/userAction'\nimport {Link} from 'react-router-dom'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n   // this.ref = firebase.firestore().collection('note');\n    this.state = {\n      title : '',\n      body : '',\n      notes: {}\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.renderNotes = this.renderNotes.bind(this)\n  }\n\n  // componentDidMount() {\n  //   // database.on('value', snapshot => {\n  //   //   this.setState({ notes: snapshot.val() })\n  //   // })\n  //   this.props.getNotes();\n  //   this.props.getUser();\n  // }\n// handle change\n  handleChange(e){\n    this.setState({\n      [e.target.name] : e.target.value\n    })\n  }\n//handle submit\n  handleSubmit(e){\n    e.preventDefault();\n    const note = {\n      title: this.state.title,\n      body: this.state.body,\n      uid: this.props.user.uid\n    }\n    // database.push(note);\n    this.props.saveNotes(note)\n    // const { title, body } = this.state;\n\n    // this.ref.add({\n    //   title,\n    //   body\n    // }).then((docRef) => {\n      this.setState({\n        title: '',\n        body: ''\n      });\n    //   this.props.history.push(\"/note\")\n    // })\n    // .catch((error) => {\n    //   console.error(\"Error adding document: \", error);\n    // });\n  }\n  renderNotes() {\n    return _.map(this.props.notes, (note,key) => {\n      return (\n        <NoteCard key={key}>\n          <Link to={`/${key}`}>\n           <h2>{note.title}</h2>\n          </Link>\n          <p>{note.body}</p>\n          {note.uid === this.props.user.uid &&(\n          <div>\n          <button \n            className=\"btn btn-danger btn-xs\"\n            onClick={()=>this.props.deleteNote(key)}>Delete</button>\n            <button \n            className=\"btn btn-info btn-xs pull-right\"\n            ><Link to={`/${key}/edit`}>Update</Link></button>\n          </div>\n          )}\n            </NoteCard>\n      )\n    })\n  }\n  render(){\n   // console.log(this.props.user)\n  return (\n    <div className=\"container-fluid\">\n      <div className =\"row\">\n        <div className=\"col-sm-2 text-center\">\n          <img \n           src={this.props.user.photoURL}\n           alt=\"here\"\n           height=\"100px\"\n           className=\"img img-responsive circle\"\n           style={{padding:'20px'}}\n          />\n          <h4 className=\"username\">Welcome back,<b>{this.props.user.displayName}</b></h4>\n        </div>\n        <div className=\"col-sm-10\">\n          <form onSubmit = {this.handleSubmit}>\n            <div className=\"form-group\">\n              <input \n                     onChange = {this.handleChange}\n                     value ={this.state.title}\n                     type=\"text\" \n                     name=\"title\" \n                     className=\"form-control no-border\"\n                     placeholder=\"Title...\" \n                     required/>\n            </div>\n            <div className=\"form-group\">\n              <textarea\n                     onChange = {this.handleChange}\n                     value={this.state.body}\n                     type=\"text\" \n                     name=\"body\" \n                     className=\"form-control no-border\"\n                     placeholder=\"Body...\" \n                     required/>\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary col-sm-12\">Save</button>\n            </div>\n          </form>\n          <br/>\n          <br/>\n          <br/>\n          {this.renderNotes()}\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\n function mapStateToProps (state, ownProps) {\n  return {\n    notes: state.notes,\n    user: state.user\n  }\n}\nexport default connect(mapStateToProps, {getNotes, saveNotes, deleteNote, getUser}) (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport noteReducer from './noteReducer'\r\nimport userReducer from './userReducer'\r\nimport loadingReducer from './loadingReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    notes: noteReducer,\r\n    user: userReducer,\r\n    loading: loadingReducer\r\n})\r\n\r\nexport default rootReducer;","import {GET_NOTES} from '../actionTypes'\r\n\r\nexport default function(state={}, action){\r\n    switch(action.type){\r\n        case GET_NOTES:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_USER} from '../actionTypes'\r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case GET_USER:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {NOTES_STATUS, USER_STATUS} from '../actionTypes'\r\n\r\nexport default function(state={}, action){\r\n    switch(action.type){\r\n        case NOTES_STATUS:\r\n            return {...state, notes: action.payload}\r\n        case USER_STATUS:\r\n            return {...state, user: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {googleLogin} from '../actions/userAction'\r\n\r\n\r\nclass Login extends Component{\r\n\r\n    componentWillMount(){\r\n        if (this.props.user !== null){\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.user !== null){\r\n            nextProps.history.push('/');\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 jumbotron\" style={{marginTop:'-20px'}}>\r\n                        <h1>BLOG | {new Date().getFullYear()}</h1>\r\n                        <h2><i>Login with your <b>social network account</b> to start writing!</i>\r\n                        </h2>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <button className=\"btn btn-danger col-sm-6\" onClick={this.props.googleLogin}>Login with Google</button>\r\n                        <button className=\"btn btn-info col-sm-6\">Login with Twitter</button>\r\n                    \r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps){\r\n    return{\r\n        user: state.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{googleLogin}) (Login);","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getUser,logout} from '../actions/userAction'\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <nav className=\"navbar navbar-default\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                    <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\"> \r\n                        <span className=\"icon-bar\"/>\r\n                        <span className=\"icon-bar\"/>\r\n                        <span className=\"icon-bar\"/>\r\n                    </button>\r\n                    <Link className=\"navbar-brand\" to=\"/\">BLOG | 2019</Link>\r\n                </div>\r\n                <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n                    <ul className=\"nav navbar-nav navbar-right\">\r\n                        {\r\n                            this.props.user === null ? (\r\n                                <li><Link to=\"/Login\">Login</Link></li>\r\n                            ) : (\r\n                                <li><Link to=\"/logout\" onClick={()=>this.props.logout()}>Logout</Link></li>\r\n                            )\r\n                        }\r\n                        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state,ownProps){\r\n    return{\r\n        user:state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{getUser,logout})(Header);","import React from 'react'\r\nimport '../Styles/loading.css'\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className = \"flex-center position-ref full-height\">\r\n            <div className=\"title m-b-md\">Loading...</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {getUser} from '../actions/userAction'\r\nimport {getNotes} from '../actions/notesAction'\r\nimport Loading from './Loading'\r\n\r\nclass LoadingComponent extends Component {\r\n    componentDidMount(){\r\n        const {userLoading, notesLoading} = this.props;\r\n        if(userLoading === undefined){\r\n            this.props.getUser();\r\n        }\r\n        if(notesLoading === undefined){\r\n            this.props.getNotes()\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.notesLoading === -1 && nextProps.user !== null){\r\n            this.props.getNotes()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {userLoading, notesLoading, children} = this.props\r\n        if( (!userLoading && !notesLoading) || this.props.user === null){\r\n            return <div>{children}</div>\r\n        } else{\r\n            return  <Loading/>\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        user: state.user,\r\n        userLoading: state.loading.user,\r\n        notesLoading: state.loading.notes\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, {getUser, getNotes})(LoadingComponent));","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass AuthenticationComponent extends Component{\r\n    componentDidUpdate(){\r\n        const {userLoading, user} = this.props\r\n        if(userLoading === false && !user){\r\n            this.props.history.push('./Login')\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {user, userLoading, children} = this.props\r\n        return (userLoading === false && user) ? <div>{children}</div> : null\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        user: state.user,\r\n        userLoading: state.loading.user\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(AuthenticationComponent));","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {saveComment} from '../actions/notesAction'\r\n\r\nclass SubmitComment extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            commentBody: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(e){\r\n        this.setState({\r\n            commentBody: e.target.value\r\n        })\r\n    }\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        const comment = {\r\n            commentBody: this.state.commentBody,\r\n            uid: this.props.uid\r\n        }\r\n       // console.log(this.props.id, comment)\r\n       this.props.saveComment(this.props.id,comment)\r\n       this.setState({commentBody:''})\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            onChange={this.handleChange}\r\n                            value={this.state.commentBody}\r\n                            type=\"text\"\r\n                            name=\"commentBody\"\r\n                            className=\"form-control no-border\"\r\n                            placeholder=\"Write comment ...\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-success\">Add comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps){\r\n    return{\r\n        uid: state.user.uid\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{saveComment})(SubmitComment); ","import React from 'react'\r\n\r\nconst Comment =({children})=> {\r\n    return <div> &#8594; {children}</div>\r\n}\r\n\r\nexport default Comment;","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport SubmitComment from './SubmitComment'\r\nimport _ from 'lodash'\r\nimport Comment from './Comment'\r\n\r\nclass NoteDetail extends Component{\r\n\r\n    renderComments(){\r\n        const{note} = this.props;\r\n        return _.map(note.comments, (comment, key) => {\r\n            return <Comment key={key} id={key}>\r\n                    {comment.commentBody}\r\n                </Comment>\r\n        })\r\n    }\r\n    render(){\r\n        const {note} = this.props\r\n        return(\r\n            <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6 col-sm-offset-3\">\r\n                    <h1>{note.title}</h1>\r\n                    <p>{note.body}</p>\r\n                    <SubmitComment id={this.props.match.params.id}/>\r\n                        {this.renderComments()}\r\n                     <Link to = \"/\"> &#171; Back</Link>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps){\r\n    return{\r\n        note: state.notes[ownProps.match.params.id],\r\n        uid: state.user.uid\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NoteDetail);","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n//import {Link} from 'react-router-dom'\r\nimport {editNote} from '../actions/notesAction'\r\n\r\nclass NoteEdit extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n     // this.ref = firebase.firestore().collection('note');\r\n      this.state = {\r\n        title : this.props.note.title,\r\n        body : this.props.note.body,\r\n      }\r\n      this.handleChange = this.handleChange.bind(this)\r\n      this.handleSubmit = this.handleSubmit.bind(this)\r\n    \r\n    }\r\n  \r\n    handleChange(e){\r\n      this.setState({\r\n        [e.target.name] : e.target.value\r\n      })\r\n    }\r\n  //handle submit\r\n    handleSubmit(e){\r\n      e.preventDefault();\r\n      const note = {\r\n        title: this.state.title,\r\n        body: this.state.body,\r\n        uid: this.props.uid\r\n      }\r\n      this.props.editNote(this.props.match.params.id, note)\r\n        this.setState({\r\n          title: '',\r\n          body: ''\r\n        });\r\n        this.props.history.push('/')\r\n    }\r\n \r\n    render(){\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className =\"row\">\r\n          <div className=\"col-sm-6 col-sm-offset-3\">\r\n            <form onSubmit = {this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input \r\n                       onChange = {this.handleChange}\r\n                       value ={this.state.title}\r\n                       type=\"text\" \r\n                       name=\"title\" \r\n                       className=\"form-control no-border\"\r\n                       placeholder=\"Title...\" \r\n                       required/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                       onChange = {this.handleChange}\r\n                       value={this.state.body}\r\n                       type=\"text\" \r\n                       name=\"body\" \r\n                       className=\"form-control no-border\"\r\n                       placeholder=\"Body...\" \r\n                       required/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary col-sm-12\">Update</button>\r\n              </div>\r\n            </form>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\nfunction mapStateToProps(state, ownProps){\r\n    return{\r\n        note: state.notes[ownProps.match.params.id],\r\n        uid: state.user.uid\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{editNote})(NoteEdit);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/Styles/index.css';\nimport App from '../src/Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\nimport {BrowserRouter,Switch,Route, Redirect} from 'react-router-dom'\nimport Login from '../src/Components/login'\nimport Header from './routes/Header'\nimport LoadingComponent from './Components/LoadingComponent'\nimport AuthenticationComponent from './Components/AuthenticationComponent'\nimport NoteDetail from './Components/noteDetail'\nimport NoteEdit from './Components/NoteEdit'\nimport './Styles/index.css'\n// create redux store > reducers > actions > applyMiddleware\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\n\n//provide the store to react\n\nReactDOM.render(<Provider store ={store}>\n    <BrowserRouter>\n     <LoadingComponent>\n        <div>\n            <Switch>\n            <Route path=\"/Login\" component={Login} exact={true}/>\n                <Redirect from=\"/logout\" to= \"/\" />\n                <AuthenticationComponent>\n                <Header/>\n                <Route path=\"/:id/edit\" component={NoteEdit} exact={true} />\n                  <Route path=\"/:id\" component={NoteDetail} exact={true} />\n                  <Route path=\"/\" component={App} exact={true}/>\n                </AuthenticationComponent>\n            </Switch>\n        </div>\n     </LoadingComponent>\n    </BrowserRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}